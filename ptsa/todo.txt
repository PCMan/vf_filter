Short-term goals
----------------

1) Rereferencing code (may not be immediately necessary)

2) WICA eyeblink correction code (and also simple eyeblink id code).

3) Save DimArray to HDF5 files (and back with fancy indexing).

4) Redo DimArray and Dim to have Pythonic indexing:
   
   x[(x.time > 0)&(x.time < 1.0)&(x.channels == 'Cz')]

   instead of

   x['(time > 0)&(time < 1.0)', 'channels == "Cz"']

5) Casting of HDF5Wrapper to int16 with scale factor to save space.

6) Fix topoplot issues (look at PyMVPA for hints).

7) Partial Least Squares

8) 


Analysis steps:
---------------

 - Load all data with wrapper
 - Downsample to 256 Hz
 - Rereference (likely to average to retain all channels)
 - Highpass filter at ~.5Hz
 - Identify range with clean eyeblinks
 - Run WICA to clean eyeblinks
 - Save processed file out to HDF5 (with annotations)

 - Align preprocessed data to experiment with events
 - Load events of interest and calculate wavelet power
 - Save to file (ideally DimArray to HDF5, but it's not ready)

 - Get means for the conditions for each participant and run PLS
 - Plot results
 - Write paper
 - Profit!!!


Other ToDos:
------------

Redo fancy 3D scalp and intracranial plots using VTK (for
publications and other fun stuph.)

Circular stats, for analyzing phase info.

Simple stats, such as bootstraps/permutation tests.  The wilcox tests
in scipy are kind of not ideal.  However, we can use rpy for any stats
we really care about.

Add in EMD and Hilbert-Huang Transform. (In progress)

Frequency flows analysis.

Maybe add in multitaper at some point, but probably not.

Methods for extracting sync pulses and aligning events. (DONE)

Artifact removal (artifact correction) (DONE)



Old basic workflow:

 - We have a bunch of subjects who performed some task.
 - Events for each subject, allow us to access the eeg data.
 - Calculate phase and power for eeg, saving to file (for now, we'll
 - save to dictionaries, eventually HDF5)
 - Run stats on power values.
 - Plot/display results.


